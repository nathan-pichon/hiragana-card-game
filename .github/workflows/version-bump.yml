name: "Bump package.json version based on PR labels"
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched
          token: ${{ secrets.GH_PAT }}  # Use a personal access token with appropriate permissions

      - uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: "Set up Git"
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: "Determine version bump"
        id: semver
        run: |
          LABELS=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name')
          VERSION_TYPE="patch" # Default to patch (bugfix)

          if echo "$LABELS" | grep -q "breaking change"; then
            VERSION_TYPE="major"
          elif echo "$LABELS" | grep -q "enhancement"; then
            VERSION_TYPE="minor"
          fi

          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Bump version and push to main and develop"
        run: |
          # Create a unique branch name for the version bump
          UNIQUE_BRANCH="version-bump-$(date +%s)"

          # Create the unique branch
          git checkout -b $UNIQUE_BRANCH

          # Bump version
          npm version $VERSION_TYPE

          # Get the new version
          NEW_VERSION=$(node -p "require('./package.json').version")

          # Commit the version bump with a clean message
          git commit --amend -m "chore(version): version bumped to v${NEW_VERSION} [skip ci]"

          # Push to main
          git push origin $UNIQUE_BRANCH:main

          # Checkout develop and merge the version bump
          git checkout develop
          git merge $UNIQUE_BRANCH --no-ff -m "chore(version): version bumped to v${NEW_VERSION} [skip ci]"
          git push origin develop
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # Use a personal access token with push permissions
